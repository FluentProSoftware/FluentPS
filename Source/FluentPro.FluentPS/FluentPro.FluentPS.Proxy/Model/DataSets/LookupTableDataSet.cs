using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace FluentPro.FluentPS.Proxy.Model.DataSets
{
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LookupTableDataSet")]
    public partial class LookupTableDataSet : global::System.Data.DataSet
    {
        private LookupTablesDataTable tableLookupTables;

        private LookupTableMasksDataTable tableLookupTableMasks;

        private LookupTableTreesDataTable tableLookupTableTrees;

        private global::System.Data.DataRelation relationLookupTablesLookupTableMasks;

        private global::System.Data.DataRelation relationLookupTableTreesLookupTableTrees;

        private global::System.Data.DataRelation relationLookupTablesLookupTableTrees;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LookupTableDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LookupTableDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LookupTables"] != null))
                {
                    base.Tables.Add(new LookupTablesDataTable(ds.Tables["LookupTables"]));
                }
                if ((ds.Tables["LookupTableMasks"] != null))
                {
                    base.Tables.Add(new LookupTableMasksDataTable(ds.Tables["LookupTableMasks"]));
                }
                if ((ds.Tables["LookupTableTrees"] != null))
                {
                    base.Tables.Add(new LookupTableTreesDataTable(ds.Tables["LookupTableTrees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LookupTablesDataTable LookupTables
        {
            get
            {
                return this.tableLookupTables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LookupTableMasksDataTable LookupTableMasks
        {
            get
            {
                return this.tableLookupTableMasks;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LookupTableTreesDataTable LookupTableTrees
        {
            get
            {
                return this.tableLookupTableTrees;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            LookupTableDataSet cln = ((LookupTableDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LookupTables"] != null))
                {
                    base.Tables.Add(new LookupTablesDataTable(ds.Tables["LookupTables"]));
                }
                if ((ds.Tables["LookupTableMasks"] != null))
                {
                    base.Tables.Add(new LookupTableMasksDataTable(ds.Tables["LookupTableMasks"]));
                }
                if ((ds.Tables["LookupTableTrees"] != null))
                {
                    base.Tables.Add(new LookupTableTreesDataTable(ds.Tables["LookupTableTrees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableLookupTables = ((LookupTablesDataTable)(base.Tables["LookupTables"]));
            if ((initTable == true))
            {
                if ((this.tableLookupTables != null))
                {
                    this.tableLookupTables.InitVars();
                }
            }
            this.tableLookupTableMasks = ((LookupTableMasksDataTable)(base.Tables["LookupTableMasks"]));
            if ((initTable == true))
            {
                if ((this.tableLookupTableMasks != null))
                {
                    this.tableLookupTableMasks.InitVars();
                }
            }
            this.tableLookupTableTrees = ((LookupTableTreesDataTable)(base.Tables["LookupTableTrees"]));
            if ((initTable == true))
            {
                if ((this.tableLookupTableTrees != null))
                {
                    this.tableLookupTableTrees.InitVars();
                }
            }
            this.relationLookupTablesLookupTableMasks = this.Relations["LookupTablesLookupTableMasks"];
            this.relationLookupTableTreesLookupTableTrees = this.Relations["LookupTableTreesLookupTableTrees"];
            this.relationLookupTablesLookupTableTrees = this.Relations["LookupTablesLookupTableTrees"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "LookupTableDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/LookupTableDataSet" +
                "/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLookupTables = new LookupTablesDataTable();
            base.Tables.Add(this.tableLookupTables);
            this.tableLookupTableMasks = new LookupTableMasksDataTable();
            base.Tables.Add(this.tableLookupTableMasks);
            this.tableLookupTableTrees = new LookupTableTreesDataTable();
            base.Tables.Add(this.tableLookupTableTrees);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("LookupTablesLookupTableMasks", new global::System.Data.DataColumn[] {
                        this.tableLookupTables.LT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableMasks.LT_UIDColumn});
            this.tableLookupTableMasks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("LookupTableTreesLookupTableTrees", new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_STRUCT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn});
            this.tableLookupTableTrees.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("LookupTablesLookupTableTrees", new global::System.Data.DataColumn[] {
                        this.tableLookupTables.LT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_UIDColumn});
            this.tableLookupTableTrees.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationLookupTablesLookupTableMasks = new global::System.Data.DataRelation("LookupTablesLookupTableMasks", new global::System.Data.DataColumn[] {
                        this.tableLookupTables.LT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableMasks.LT_UIDColumn}, false);
            this.Relations.Add(this.relationLookupTablesLookupTableMasks);
            this.relationLookupTableTreesLookupTableTrees = new global::System.Data.DataRelation("LookupTableTreesLookupTableTrees", new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_STRUCT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn}, false);
            this.Relations.Add(this.relationLookupTableTreesLookupTableTrees);
            this.relationLookupTablesLookupTableTrees = new global::System.Data.DataRelation("LookupTablesLookupTableTrees", new global::System.Data.DataColumn[] {
                        this.tableLookupTables.LT_UIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLookupTableTrees.LT_UIDColumn}, false);
            this.Relations.Add(this.relationLookupTablesLookupTableTrees);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLookupTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLookupTableMasks()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLookupTableTrees()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            LookupTableDataSet ds = new LookupTableDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LookupTablesRowChangeEventHandler(object sender, LookupTablesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LookupTableMasksRowChangeEventHandler(object sender, LookupTableMasksRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LookupTableTreesRowChangeEventHandler(object sender, LookupTableTreesRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LookupTablesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnLT_UID;

            private global::System.Data.DataColumn columnLT_NAME;

            private global::System.Data.DataColumn columnLT_SORT_ORDER_ENUM;

            private global::System.Data.DataColumn columnLT_PRIMARY_LCID;

            private global::System.Data.DataColumn columnLT_FILL_ALL_LEVELS;

            private global::System.Data.DataColumn columnLT_CHECKOUTBY;

            private global::System.Data.DataColumn columnLT_CHECKOUTDATE;

            private global::System.Data.DataColumn columnMOD_DATE;

            private global::System.Data.DataColumn columnAPP_ENTITY_UID;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesDataTable()
            {
                this.TableName = "LookupTables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTablesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LookupTablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_UIDColumn
            {
                get
                {
                    return this.columnLT_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_NAMEColumn
            {
                get
                {
                    return this.columnLT_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_SORT_ORDER_ENUMColumn
            {
                get
                {
                    return this.columnLT_SORT_ORDER_ENUM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_PRIMARY_LCIDColumn
            {
                get
                {
                    return this.columnLT_PRIMARY_LCID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_FILL_ALL_LEVELSColumn
            {
                get
                {
                    return this.columnLT_FILL_ALL_LEVELS;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_CHECKOUTBYColumn
            {
                get
                {
                    return this.columnLT_CHECKOUTBY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_CHECKOUTDATEColumn
            {
                get
                {
                    return this.columnLT_CHECKOUTDATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MOD_DATEColumn
            {
                get
                {
                    return this.columnMOD_DATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APP_ENTITY_UIDColumn
            {
                get
                {
                    return this.columnAPP_ENTITY_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow this[int index]
            {
                get
                {
                    return ((LookupTablesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTablesRowChangeEventHandler LookupTablesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTablesRowChangeEventHandler LookupTablesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTablesRowChangeEventHandler LookupTablesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTablesRowChangeEventHandler LookupTablesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLookupTablesRow(LookupTablesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow AddLookupTablesRow(System.Guid LT_UID, string LT_NAME, byte LT_SORT_ORDER_ENUM, int LT_PRIMARY_LCID, bool LT_FILL_ALL_LEVELS, System.Guid LT_CHECKOUTBY, System.DateTime LT_CHECKOUTDATE, System.DateTime MOD_DATE, System.Guid APP_ENTITY_UID)
            {
                LookupTablesRow rowLookupTablesRow = ((LookupTablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LT_UID,
                        LT_NAME,
                        LT_SORT_ORDER_ENUM,
                        LT_PRIMARY_LCID,
                        LT_FILL_ALL_LEVELS,
                        LT_CHECKOUTBY,
                        LT_CHECKOUTDATE,
                        MOD_DATE,
                        APP_ENTITY_UID};
                rowLookupTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLookupTablesRow);
                return rowLookupTablesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow FindByLT_UID(System.Guid LT_UID)
            {
                return ((LookupTablesRow)(this.Rows.Find(new object[] {
                            LT_UID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                LookupTablesDataTable cln = ((LookupTablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LookupTablesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnLT_UID = base.Columns["LT_UID"];
                this.columnLT_NAME = base.Columns["LT_NAME"];
                this.columnLT_SORT_ORDER_ENUM = base.Columns["LT_SORT_ORDER_ENUM"];
                this.columnLT_PRIMARY_LCID = base.Columns["LT_PRIMARY_LCID"];
                this.columnLT_FILL_ALL_LEVELS = base.Columns["LT_FILL_ALL_LEVELS"];
                this.columnLT_CHECKOUTBY = base.Columns["LT_CHECKOUTBY"];
                this.columnLT_CHECKOUTDATE = base.Columns["LT_CHECKOUTDATE"];
                this.columnMOD_DATE = base.Columns["MOD_DATE"];
                this.columnAPP_ENTITY_UID = base.Columns["APP_ENTITY_UID"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnLT_UID = new global::System.Data.DataColumn("LT_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_UID);
                this.columnLT_NAME = new global::System.Data.DataColumn("LT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_NAME);
                this.columnLT_SORT_ORDER_ENUM = new global::System.Data.DataColumn("LT_SORT_ORDER_ENUM", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_SORT_ORDER_ENUM);
                this.columnLT_PRIMARY_LCID = new global::System.Data.DataColumn("LT_PRIMARY_LCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_PRIMARY_LCID);
                this.columnLT_FILL_ALL_LEVELS = new global::System.Data.DataColumn("LT_FILL_ALL_LEVELS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_FILL_ALL_LEVELS);
                this.columnLT_CHECKOUTBY = new global::System.Data.DataColumn("LT_CHECKOUTBY", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_CHECKOUTBY);
                this.columnLT_CHECKOUTDATE = new global::System.Data.DataColumn("LT_CHECKOUTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_CHECKOUTDATE);
                this.columnMOD_DATE = new global::System.Data.DataColumn("MOD_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOD_DATE);
                this.columnAPP_ENTITY_UID = new global::System.Data.DataColumn("APP_ENTITY_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPP_ENTITY_UID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("LookupTableDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnLT_UID}, true));
                this.columnLT_UID.AllowDBNull = false;
                this.columnLT_UID.Unique = true;
                this.columnLT_NAME.AllowDBNull = false;
                this.columnLT_SORT_ORDER_ENUM.DefaultValue = ((byte)(0));
                this.columnLT_FILL_ALL_LEVELS.DefaultValue = ((bool)(false));
                this.columnLT_CHECKOUTBY.ReadOnly = true;
                this.columnLT_CHECKOUTDATE.ReadOnly = true;
                this.columnMOD_DATE.ReadOnly = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow NewLookupTablesRow()
            {
                return ((LookupTablesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LookupTablesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(LookupTablesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LookupTablesRowChanged != null))
                {
                    this.LookupTablesRowChanged(this, new LookupTablesRowChangeEvent(((LookupTablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LookupTablesRowChanging != null))
                {
                    this.LookupTablesRowChanging(this, new LookupTablesRowChangeEvent(((LookupTablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LookupTablesRowDeleted != null))
                {
                    this.LookupTablesRowDeleted(this, new LookupTablesRowChangeEvent(((LookupTablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LookupTablesRowDeleting != null))
                {
                    this.LookupTablesRowDeleting(this, new LookupTablesRowChangeEvent(((LookupTablesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLookupTablesRow(LookupTablesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LookupTableDataSet ds = new LookupTableDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LookupTablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LookupTableMasksDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnLT_UID;

            private global::System.Data.DataColumn columnLT_MASK_STRUCT_LEVEL;

            private global::System.Data.DataColumn columnLT_MASK_STRUCT_TYPE_ENUM;

            private global::System.Data.DataColumn columnLT_MASK_STRUCT_LENGTH;

            private global::System.Data.DataColumn columnLT_MASK_VALUE_SEPARATOR;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksDataTable()
            {
                this.TableName = "LookupTableMasks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTableMasksDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LookupTableMasksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_UIDColumn
            {
                get
                {
                    return this.columnLT_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_MASK_STRUCT_LEVELColumn
            {
                get
                {
                    return this.columnLT_MASK_STRUCT_LEVEL;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_MASK_STRUCT_TYPE_ENUMColumn
            {
                get
                {
                    return this.columnLT_MASK_STRUCT_TYPE_ENUM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_MASK_STRUCT_LENGTHColumn
            {
                get
                {
                    return this.columnLT_MASK_STRUCT_LENGTH;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_MASK_VALUE_SEPARATORColumn
            {
                get
                {
                    return this.columnLT_MASK_VALUE_SEPARATOR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow this[int index]
            {
                get
                {
                    return ((LookupTableMasksRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableMasksRowChangeEventHandler LookupTableMasksRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableMasksRowChangeEventHandler LookupTableMasksRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableMasksRowChangeEventHandler LookupTableMasksRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableMasksRowChangeEventHandler LookupTableMasksRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLookupTableMasksRow(LookupTableMasksRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow AddLookupTableMasksRow(LookupTablesRow parentLookupTablesRowByLookupTablesLookupTableMasks, int LT_MASK_STRUCT_LEVEL, byte LT_MASK_STRUCT_TYPE_ENUM, int LT_MASK_STRUCT_LENGTH, string LT_MASK_VALUE_SEPARATOR)
            {
                LookupTableMasksRow rowLookupTableMasksRow = ((LookupTableMasksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LT_MASK_STRUCT_LEVEL,
                        LT_MASK_STRUCT_TYPE_ENUM,
                        LT_MASK_STRUCT_LENGTH,
                        LT_MASK_VALUE_SEPARATOR};
                if ((parentLookupTablesRowByLookupTablesLookupTableMasks != null))
                {
                    columnValuesArray[0] = parentLookupTablesRowByLookupTablesLookupTableMasks[0];
                }
                rowLookupTableMasksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLookupTableMasksRow);
                return rowLookupTableMasksRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow FindByLT_UIDLT_MASK_STRUCT_LEVEL(System.Guid LT_UID, int LT_MASK_STRUCT_LEVEL)
            {
                return ((LookupTableMasksRow)(this.Rows.Find(new object[] {
                            LT_UID,
                            LT_MASK_STRUCT_LEVEL})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                LookupTableMasksDataTable cln = ((LookupTableMasksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LookupTableMasksDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnLT_UID = base.Columns["LT_UID"];
                this.columnLT_MASK_STRUCT_LEVEL = base.Columns["LT_MASK_STRUCT_LEVEL"];
                this.columnLT_MASK_STRUCT_TYPE_ENUM = base.Columns["LT_MASK_STRUCT_TYPE_ENUM"];
                this.columnLT_MASK_STRUCT_LENGTH = base.Columns["LT_MASK_STRUCT_LENGTH"];
                this.columnLT_MASK_VALUE_SEPARATOR = base.Columns["LT_MASK_VALUE_SEPARATOR"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnLT_UID = new global::System.Data.DataColumn("LT_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_UID);
                this.columnLT_MASK_STRUCT_LEVEL = new global::System.Data.DataColumn("LT_MASK_STRUCT_LEVEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_MASK_STRUCT_LEVEL);
                this.columnLT_MASK_STRUCT_TYPE_ENUM = new global::System.Data.DataColumn("LT_MASK_STRUCT_TYPE_ENUM", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_MASK_STRUCT_TYPE_ENUM);
                this.columnLT_MASK_STRUCT_LENGTH = new global::System.Data.DataColumn("LT_MASK_STRUCT_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_MASK_STRUCT_LENGTH);
                this.columnLT_MASK_VALUE_SEPARATOR = new global::System.Data.DataColumn("LT_MASK_VALUE_SEPARATOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_MASK_VALUE_SEPARATOR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("LookupTableDataSetKey2", new global::System.Data.DataColumn[] {
                                this.columnLT_UID,
                                this.columnLT_MASK_STRUCT_LEVEL}, true));
                this.columnLT_UID.AllowDBNull = false;
                this.columnLT_MASK_STRUCT_LEVEL.AllowDBNull = false;
                this.columnLT_MASK_STRUCT_LENGTH.DefaultValue = ((int)(0));
                this.columnLT_MASK_VALUE_SEPARATOR.DefaultValue = ((string)(""));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow NewLookupTableMasksRow()
            {
                return ((LookupTableMasksRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LookupTableMasksRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(LookupTableMasksRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LookupTableMasksRowChanged != null))
                {
                    this.LookupTableMasksRowChanged(this, new LookupTableMasksRowChangeEvent(((LookupTableMasksRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LookupTableMasksRowChanging != null))
                {
                    this.LookupTableMasksRowChanging(this, new LookupTableMasksRowChangeEvent(((LookupTableMasksRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LookupTableMasksRowDeleted != null))
                {
                    this.LookupTableMasksRowDeleted(this, new LookupTableMasksRowChangeEvent(((LookupTableMasksRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LookupTableMasksRowDeleting != null))
                {
                    this.LookupTableMasksRowDeleting(this, new LookupTableMasksRowChangeEvent(((LookupTableMasksRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLookupTableMasksRow(LookupTableMasksRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LookupTableDataSet ds = new LookupTableDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LookupTableMasksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LookupTableTreesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnLT_STRUCT_UID;

            private global::System.Data.DataColumn columnLT_UID;

            private global::System.Data.DataColumn columnLT_PARENT_STRUCT_UID;

            private global::System.Data.DataColumn columnLT_VALUE_DUR;

            private global::System.Data.DataColumn columnLT_VALUE_NUM;

            private global::System.Data.DataColumn columnLT_VALUE_DUR_FMT;

            private global::System.Data.DataColumn columnLT_VALUE_DATE;

            private global::System.Data.DataColumn columnLT_VALUE_TEXT;

            private global::System.Data.DataColumn columnLT_VALUE_DEFAULT_WEIGHT;

            private global::System.Data.DataColumn columnLT_VALUE_DEFAULT_BACK_COLOR;

            private global::System.Data.DataColumn columnLT_VALUE_DEFAULT_FORE_COLOR;

            private global::System.Data.DataColumn columnLT_VALUE_PHONETIC;

            private global::System.Data.DataColumn columnLT_VALUE_DESC;

            private global::System.Data.DataColumn columnLT_VALUE_SORT_INDEX;

            private global::System.Data.DataColumn columnLT_VALUE_LOCALIZED_COOKIE;

            private global::System.Data.DataColumn columnLT_STRUCT_COOKIE;

            private global::System.Data.DataColumn columnLT_VALUE_FULL;

            private global::System.Data.DataColumn columnAPP_ENTITY_UID;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesDataTable()
            {
                this.TableName = "LookupTableTrees";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTableTreesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LookupTableTreesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_STRUCT_UIDColumn
            {
                get
                {
                    return this.columnLT_STRUCT_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_UIDColumn
            {
                get
                {
                    return this.columnLT_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_PARENT_STRUCT_UIDColumn
            {
                get
                {
                    return this.columnLT_PARENT_STRUCT_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DURColumn
            {
                get
                {
                    return this.columnLT_VALUE_DUR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_NUMColumn
            {
                get
                {
                    return this.columnLT_VALUE_NUM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DUR_FMTColumn
            {
                get
                {
                    return this.columnLT_VALUE_DUR_FMT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DATEColumn
            {
                get
                {
                    return this.columnLT_VALUE_DATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_TEXTColumn
            {
                get
                {
                    return this.columnLT_VALUE_TEXT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DEFAULT_WEIGHTColumn
            {
                get
                {
                    return this.columnLT_VALUE_DEFAULT_WEIGHT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DEFAULT_BACK_COLORColumn
            {
                get
                {
                    return this.columnLT_VALUE_DEFAULT_BACK_COLOR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DEFAULT_FORE_COLORColumn
            {
                get
                {
                    return this.columnLT_VALUE_DEFAULT_FORE_COLOR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_PHONETICColumn
            {
                get
                {
                    return this.columnLT_VALUE_PHONETIC;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_DESCColumn
            {
                get
                {
                    return this.columnLT_VALUE_DESC;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_SORT_INDEXColumn
            {
                get
                {
                    return this.columnLT_VALUE_SORT_INDEX;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_LOCALIZED_COOKIEColumn
            {
                get
                {
                    return this.columnLT_VALUE_LOCALIZED_COOKIE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_STRUCT_COOKIEColumn
            {
                get
                {
                    return this.columnLT_STRUCT_COOKIE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_VALUE_FULLColumn
            {
                get
                {
                    return this.columnLT_VALUE_FULL;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APP_ENTITY_UIDColumn
            {
                get
                {
                    return this.columnAPP_ENTITY_UID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow this[int index]
            {
                get
                {
                    return ((LookupTableTreesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableTreesRowChangeEventHandler LookupTableTreesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableTreesRowChangeEventHandler LookupTableTreesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableTreesRowChangeEventHandler LookupTableTreesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LookupTableTreesRowChangeEventHandler LookupTableTreesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLookupTableTreesRow(LookupTableTreesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow AddLookupTableTreesRow(
                        System.Guid LT_STRUCT_UID,
                        LookupTablesRow parentLookupTablesRowByLookupTablesLookupTableTrees,
                        LookupTableTreesRow parentLookupTableTreesRowByLookupTableTreesLookupTableTrees,
                        int LT_VALUE_DUR,
                        decimal LT_VALUE_NUM,
                        byte LT_VALUE_DUR_FMT,
                        System.DateTime LT_VALUE_DATE,
                        string LT_VALUE_TEXT,
                        double LT_VALUE_DEFAULT_WEIGHT,
                        int LT_VALUE_DEFAULT_BACK_COLOR,
                        int LT_VALUE_DEFAULT_FORE_COLOR,
                        string LT_VALUE_PHONETIC,
                        string LT_VALUE_DESC,
                        decimal LT_VALUE_SORT_INDEX,
                        string LT_VALUE_LOCALIZED_COOKIE,
                        string LT_STRUCT_COOKIE,
                        string LT_VALUE_FULL,
                        System.Guid APP_ENTITY_UID)
            {
                LookupTableTreesRow rowLookupTableTreesRow = ((LookupTableTreesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LT_STRUCT_UID,
                        null,
                        null,
                        LT_VALUE_DUR,
                        LT_VALUE_NUM,
                        LT_VALUE_DUR_FMT,
                        LT_VALUE_DATE,
                        LT_VALUE_TEXT,
                        LT_VALUE_DEFAULT_WEIGHT,
                        LT_VALUE_DEFAULT_BACK_COLOR,
                        LT_VALUE_DEFAULT_FORE_COLOR,
                        LT_VALUE_PHONETIC,
                        LT_VALUE_DESC,
                        LT_VALUE_SORT_INDEX,
                        LT_VALUE_LOCALIZED_COOKIE,
                        LT_STRUCT_COOKIE,
                        LT_VALUE_FULL,
                        APP_ENTITY_UID};
                if ((parentLookupTablesRowByLookupTablesLookupTableTrees != null))
                {
                    columnValuesArray[1] = parentLookupTablesRowByLookupTablesLookupTableTrees[0];
                }
                if ((parentLookupTableTreesRowByLookupTableTreesLookupTableTrees != null))
                {
                    columnValuesArray[2] = parentLookupTableTreesRowByLookupTableTreesLookupTableTrees[0];
                }
                rowLookupTableTreesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLookupTableTreesRow);
                return rowLookupTableTreesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow FindByLT_STRUCT_UID(System.Guid LT_STRUCT_UID)
            {
                return ((LookupTableTreesRow)(this.Rows.Find(new object[] {
                            LT_STRUCT_UID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                LookupTableTreesDataTable cln = ((LookupTableTreesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LookupTableTreesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnLT_STRUCT_UID = base.Columns["LT_STRUCT_UID"];
                this.columnLT_UID = base.Columns["LT_UID"];
                this.columnLT_PARENT_STRUCT_UID = base.Columns["LT_PARENT_STRUCT_UID"];
                this.columnLT_VALUE_DUR = base.Columns["LT_VALUE_DUR"];
                this.columnLT_VALUE_NUM = base.Columns["LT_VALUE_NUM"];
                this.columnLT_VALUE_DUR_FMT = base.Columns["LT_VALUE_DUR_FMT"];
                this.columnLT_VALUE_DATE = base.Columns["LT_VALUE_DATE"];
                this.columnLT_VALUE_TEXT = base.Columns["LT_VALUE_TEXT"];
                this.columnLT_VALUE_DEFAULT_WEIGHT = base.Columns["LT_VALUE_DEFAULT_WEIGHT"];
                this.columnLT_VALUE_DEFAULT_BACK_COLOR = base.Columns["LT_VALUE_DEFAULT_BACK_COLOR"];
                this.columnLT_VALUE_DEFAULT_FORE_COLOR = base.Columns["LT_VALUE_DEFAULT_FORE_COLOR"];
                this.columnLT_VALUE_PHONETIC = base.Columns["LT_VALUE_PHONETIC"];
                this.columnLT_VALUE_DESC = base.Columns["LT_VALUE_DESC"];
                this.columnLT_VALUE_SORT_INDEX = base.Columns["LT_VALUE_SORT_INDEX"];
                this.columnLT_VALUE_LOCALIZED_COOKIE = base.Columns["LT_VALUE_LOCALIZED_COOKIE"];
                this.columnLT_STRUCT_COOKIE = base.Columns["LT_STRUCT_COOKIE"];
                this.columnLT_VALUE_FULL = base.Columns["LT_VALUE_FULL"];
                this.columnAPP_ENTITY_UID = base.Columns["APP_ENTITY_UID"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnLT_STRUCT_UID = new global::System.Data.DataColumn("LT_STRUCT_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_STRUCT_UID);
                this.columnLT_UID = new global::System.Data.DataColumn("LT_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_UID);
                this.columnLT_PARENT_STRUCT_UID = new global::System.Data.DataColumn("LT_PARENT_STRUCT_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_PARENT_STRUCT_UID);
                this.columnLT_VALUE_DUR = new global::System.Data.DataColumn("LT_VALUE_DUR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DUR);
                this.columnLT_VALUE_NUM = new global::System.Data.DataColumn("LT_VALUE_NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_NUM);
                this.columnLT_VALUE_DUR_FMT = new global::System.Data.DataColumn("LT_VALUE_DUR_FMT", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DUR_FMT);
                this.columnLT_VALUE_DATE = new global::System.Data.DataColumn("LT_VALUE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DATE);
                this.columnLT_VALUE_TEXT = new global::System.Data.DataColumn("LT_VALUE_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_TEXT);
                this.columnLT_VALUE_DEFAULT_WEIGHT = new global::System.Data.DataColumn("LT_VALUE_DEFAULT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DEFAULT_WEIGHT);
                this.columnLT_VALUE_DEFAULT_BACK_COLOR = new global::System.Data.DataColumn("LT_VALUE_DEFAULT_BACK_COLOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DEFAULT_BACK_COLOR);
                this.columnLT_VALUE_DEFAULT_FORE_COLOR = new global::System.Data.DataColumn("LT_VALUE_DEFAULT_FORE_COLOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DEFAULT_FORE_COLOR);
                this.columnLT_VALUE_PHONETIC = new global::System.Data.DataColumn("LT_VALUE_PHONETIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_PHONETIC);
                this.columnLT_VALUE_DESC = new global::System.Data.DataColumn("LT_VALUE_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_DESC);
                this.columnLT_VALUE_SORT_INDEX = new global::System.Data.DataColumn("LT_VALUE_SORT_INDEX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_SORT_INDEX);
                this.columnLT_VALUE_LOCALIZED_COOKIE = new global::System.Data.DataColumn("LT_VALUE_LOCALIZED_COOKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_LOCALIZED_COOKIE);
                this.columnLT_STRUCT_COOKIE = new global::System.Data.DataColumn("LT_STRUCT_COOKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_STRUCT_COOKIE);
                this.columnLT_VALUE_FULL = new global::System.Data.DataColumn("LT_VALUE_FULL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_VALUE_FULL);
                this.columnAPP_ENTITY_UID = new global::System.Data.DataColumn("APP_ENTITY_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPP_ENTITY_UID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("key1", new global::System.Data.DataColumn[] {
                                this.columnLT_STRUCT_UID}, true));
                this.columnLT_STRUCT_UID.AllowDBNull = false;
                this.columnLT_STRUCT_UID.Unique = true;
                this.columnLT_UID.AllowDBNull = false;
                this.columnLT_VALUE_FULL.ReadOnly = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow NewLookupTableTreesRow()
            {
                return ((LookupTableTreesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LookupTableTreesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(LookupTableTreesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LookupTableTreesRowChanged != null))
                {
                    this.LookupTableTreesRowChanged(this, new LookupTableTreesRowChangeEvent(((LookupTableTreesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LookupTableTreesRowChanging != null))
                {
                    this.LookupTableTreesRowChanging(this, new LookupTableTreesRowChangeEvent(((LookupTableTreesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LookupTableTreesRowDeleted != null))
                {
                    this.LookupTableTreesRowDeleted(this, new LookupTableTreesRowChangeEvent(((LookupTableTreesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LookupTableTreesRowDeleting != null))
                {
                    this.LookupTableTreesRowDeleting(this, new LookupTableTreesRowChangeEvent(((LookupTableTreesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLookupTableTreesRow(LookupTableTreesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LookupTableDataSet ds = new LookupTableDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LookupTableTreesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LookupTablesRow : global::System.Data.DataRow
        {

            private LookupTablesDataTable tableLookupTables;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTablesRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableLookupTables = ((LookupTablesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableLookupTables.LT_UIDColumn]));
                }
                set
                {
                    this[this.tableLookupTables.LT_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_NAME
            {
                get
                {
                    return ((string)(this[this.tableLookupTables.LT_NAMEColumn]));
                }
                set
                {
                    this[this.tableLookupTables.LT_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LT_SORT_ORDER_ENUM
            {
                get
                {
                    try
                    {
                        return ((byte)(this[this.tableLookupTables.LT_SORT_ORDER_ENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_SORT_ORDER_ENUM\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.LT_SORT_ORDER_ENUMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_PRIMARY_LCID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLookupTables.LT_PRIMARY_LCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_PRIMARY_LCID\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.LT_PRIMARY_LCIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LT_FILL_ALL_LEVELS
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableLookupTables.LT_FILL_ALL_LEVELSColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_FILL_ALL_LEVELS\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.LT_FILL_ALL_LEVELSColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_CHECKOUTBY
            {
                get
                {
                    try
                    {
                        return ((global::System.Guid)(this[this.tableLookupTables.LT_CHECKOUTBYColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_CHECKOUTBY\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.LT_CHECKOUTBYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LT_CHECKOUTDATE
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableLookupTables.LT_CHECKOUTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_CHECKOUTDATE\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.LT_CHECKOUTDATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MOD_DATE
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableLookupTables.MOD_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOD_DATE\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.MOD_DATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid APP_ENTITY_UID
            {
                get
                {
                    try
                    {
                        return ((global::System.Guid)(this[this.tableLookupTables.APP_ENTITY_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'APP_ENTITY_UID\' in table \'LookupTables\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTables.APP_ENTITY_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_SORT_ORDER_ENUMNull()
            {
                return this.IsNull(this.tableLookupTables.LT_SORT_ORDER_ENUMColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_SORT_ORDER_ENUMNull()
            {
                this[this.tableLookupTables.LT_SORT_ORDER_ENUMColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_PRIMARY_LCIDNull()
            {
                return this.IsNull(this.tableLookupTables.LT_PRIMARY_LCIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_PRIMARY_LCIDNull()
            {
                this[this.tableLookupTables.LT_PRIMARY_LCIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_FILL_ALL_LEVELSNull()
            {
                return this.IsNull(this.tableLookupTables.LT_FILL_ALL_LEVELSColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_FILL_ALL_LEVELSNull()
            {
                this[this.tableLookupTables.LT_FILL_ALL_LEVELSColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_CHECKOUTBYNull()
            {
                return this.IsNull(this.tableLookupTables.LT_CHECKOUTBYColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_CHECKOUTBYNull()
            {
                this[this.tableLookupTables.LT_CHECKOUTBYColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_CHECKOUTDATENull()
            {
                return this.IsNull(this.tableLookupTables.LT_CHECKOUTDATEColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_CHECKOUTDATENull()
            {
                this[this.tableLookupTables.LT_CHECKOUTDATEColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMOD_DATENull()
            {
                return this.IsNull(this.tableLookupTables.MOD_DATEColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMOD_DATENull()
            {
                this[this.tableLookupTables.MOD_DATEColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPP_ENTITY_UIDNull()
            {
                return this.IsNull(this.tableLookupTables.APP_ENTITY_UIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPP_ENTITY_UIDNull()
            {
                this[this.tableLookupTables.APP_ENTITY_UIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow[] GetLookupTableTreesRows()
            {
                if ((this.Table.ChildRelations["LookupTablesLookupTableTrees"] == null))
                {
                    return new LookupTableTreesRow[0];
                }
                else
                {
                    return ((LookupTableTreesRow[])(base.GetChildRows(this.Table.ChildRelations["LookupTablesLookupTableTrees"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow[] GetLookupTableMasksRows()
            {
                if ((this.Table.ChildRelations["LookupTablesLookupTableMasks"] == null))
                {
                    return new LookupTableMasksRow[0];
                }
                else
                {
                    return ((LookupTableMasksRow[])(base.GetChildRows(this.Table.ChildRelations["LookupTablesLookupTableMasks"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LookupTableMasksRow : global::System.Data.DataRow
        {

            private LookupTableMasksDataTable tableLookupTableMasks;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTableMasksRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableLookupTableMasks = ((LookupTableMasksDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableLookupTableMasks.LT_UIDColumn]));
                }
                set
                {
                    this[this.tableLookupTableMasks.LT_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_MASK_STRUCT_LEVEL
            {
                get
                {
                    return ((int)(this[this.tableLookupTableMasks.LT_MASK_STRUCT_LEVELColumn]));
                }
                set
                {
                    this[this.tableLookupTableMasks.LT_MASK_STRUCT_LEVELColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LT_MASK_STRUCT_TYPE_ENUM
            {
                get
                {
                    try
                    {
                        return ((byte)(this[this.tableLookupTableMasks.LT_MASK_STRUCT_TYPE_ENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_MASK_STRUCT_TYPE_ENUM\' in table \'LookupTableMasks\' is DB" +
                                "Null.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableMasks.LT_MASK_STRUCT_TYPE_ENUMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_MASK_STRUCT_LENGTH
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLookupTableMasks.LT_MASK_STRUCT_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_MASK_STRUCT_LENGTH\' in table \'LookupTableMasks\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableMasks.LT_MASK_STRUCT_LENGTHColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_MASK_VALUE_SEPARATOR
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableMasks.LT_MASK_VALUE_SEPARATORColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_MASK_VALUE_SEPARATOR\' in table \'LookupTableMasks\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableMasks.LT_MASK_VALUE_SEPARATORColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow LookupTablesRow
            {
                get
                {
                    return ((LookupTablesRow)(this.GetParentRow(this.Table.ParentRelations["LookupTablesLookupTableMasks"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["LookupTablesLookupTableMasks"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_MASK_STRUCT_TYPE_ENUMNull()
            {
                return this.IsNull(this.tableLookupTableMasks.LT_MASK_STRUCT_TYPE_ENUMColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_MASK_STRUCT_TYPE_ENUMNull()
            {
                this[this.tableLookupTableMasks.LT_MASK_STRUCT_TYPE_ENUMColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_MASK_STRUCT_LENGTHNull()
            {
                return this.IsNull(this.tableLookupTableMasks.LT_MASK_STRUCT_LENGTHColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_MASK_STRUCT_LENGTHNull()
            {
                this[this.tableLookupTableMasks.LT_MASK_STRUCT_LENGTHColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_MASK_VALUE_SEPARATORNull()
            {
                return this.IsNull(this.tableLookupTableMasks.LT_MASK_VALUE_SEPARATORColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_MASK_VALUE_SEPARATORNull()
            {
                this[this.tableLookupTableMasks.LT_MASK_VALUE_SEPARATORColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LookupTableTreesRow : global::System.Data.DataRow
        {

            private LookupTableTreesDataTable tableLookupTableTrees;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LookupTableTreesRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableLookupTableTrees = ((LookupTableTreesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_STRUCT_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableLookupTableTrees.LT_STRUCT_UIDColumn]));
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_STRUCT_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableLookupTableTrees.LT_UIDColumn]));
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid LT_PARENT_STRUCT_UID
            {
                get
                {
                    try
                    {
                        return ((global::System.Guid)(this[this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_PARENT_STRUCT_UID\' in table \'LookupTableTrees\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_VALUE_DUR
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLookupTableTrees.LT_VALUE_DURColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DUR\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DURColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LT_VALUE_NUM
            {
                get
                {
                    try
                    {
                        return ((decimal)(this[this.tableLookupTableTrees.LT_VALUE_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_NUM\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_NUMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LT_VALUE_DUR_FMT
            {
                get
                {
                    try
                    {
                        return ((byte)(this[this.tableLookupTableTrees.LT_VALUE_DUR_FMTColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DUR_FMT\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DUR_FMTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LT_VALUE_DATE
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableLookupTableTrees.LT_VALUE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DATE\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_VALUE_TEXT
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_VALUE_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_TEXT\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_TEXTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LT_VALUE_DEFAULT_WEIGHT
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DEFAULT_WEIGHT\' in table \'LookupTableTrees\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_WEIGHTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_VALUE_DEFAULT_BACK_COLOR
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_BACK_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DEFAULT_BACK_COLOR\' in table \'LookupTableTrees\' is" +
                                " DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_BACK_COLORColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LT_VALUE_DEFAULT_FORE_COLOR
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_FORE_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DEFAULT_FORE_COLOR\' in table \'LookupTableTrees\' is" +
                                " DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_FORE_COLORColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_VALUE_PHONETIC
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_VALUE_PHONETICColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_PHONETIC\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_PHONETICColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_VALUE_DESC
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_VALUE_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_DESC\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_DESCColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LT_VALUE_SORT_INDEX
            {
                get
                {
                    try
                    {
                        return ((decimal)(this[this.tableLookupTableTrees.LT_VALUE_SORT_INDEXColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_SORT_INDEX\' in table \'LookupTableTrees\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_SORT_INDEXColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_VALUE_LOCALIZED_COOKIE
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_VALUE_LOCALIZED_COOKIEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_LOCALIZED_COOKIE\' in table \'LookupTableTrees\' is D" +
                                "BNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_LOCALIZED_COOKIEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_STRUCT_COOKIE
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_STRUCT_COOKIEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_STRUCT_COOKIE\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_STRUCT_COOKIEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LT_VALUE_FULL
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLookupTableTrees.LT_VALUE_FULLColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_VALUE_FULL\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.LT_VALUE_FULLColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid APP_ENTITY_UID
            {
                get
                {
                    try
                    {
                        return ((global::System.Guid)(this[this.tableLookupTableTrees.APP_ENTITY_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'APP_ENTITY_UID\' in table \'LookupTableTrees\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableLookupTableTrees.APP_ENTITY_UIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow LookupTableTreesRowParent
            {
                get
                {
                    return ((LookupTableTreesRow)(this.GetParentRow(this.Table.ParentRelations["LookupTableTreesLookupTableTrees"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["LookupTableTreesLookupTableTrees"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow LookupTablesRow
            {
                get
                {
                    return ((LookupTablesRow)(this.GetParentRow(this.Table.ParentRelations["LookupTablesLookupTableTrees"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["LookupTablesLookupTableTrees"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_PARENT_STRUCT_UIDNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_PARENT_STRUCT_UIDNull()
            {
                this[this.tableLookupTableTrees.LT_PARENT_STRUCT_UIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DURNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DURColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DURNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DURColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_NUMNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_NUMColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_NUMNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_NUMColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DUR_FMTNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DUR_FMTColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DUR_FMTNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DUR_FMTColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DATENull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DATEColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DATENull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DATEColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_TEXTNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_TEXTColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_TEXTNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_TEXTColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DEFAULT_WEIGHTNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DEFAULT_WEIGHTColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DEFAULT_WEIGHTNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_WEIGHTColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DEFAULT_BACK_COLORNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DEFAULT_BACK_COLORColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DEFAULT_BACK_COLORNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_BACK_COLORColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DEFAULT_FORE_COLORNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DEFAULT_FORE_COLORColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DEFAULT_FORE_COLORNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DEFAULT_FORE_COLORColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_PHONETICNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_PHONETICColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_PHONETICNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_PHONETICColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_DESCNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_DESCColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_DESCNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_DESCColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_SORT_INDEXNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_SORT_INDEXColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_SORT_INDEXNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_SORT_INDEXColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_LOCALIZED_COOKIENull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_LOCALIZED_COOKIEColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_LOCALIZED_COOKIENull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_LOCALIZED_COOKIEColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_STRUCT_COOKIENull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_STRUCT_COOKIEColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_STRUCT_COOKIENull()
            {
                this[this.tableLookupTableTrees.LT_STRUCT_COOKIEColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_VALUE_FULLNull()
            {
                return this.IsNull(this.tableLookupTableTrees.LT_VALUE_FULLColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_VALUE_FULLNull()
            {
                this[this.tableLookupTableTrees.LT_VALUE_FULLColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPP_ENTITY_UIDNull()
            {
                return this.IsNull(this.tableLookupTableTrees.APP_ENTITY_UIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPP_ENTITY_UIDNull()
            {
                this[this.tableLookupTableTrees.APP_ENTITY_UIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow[] GetLookupTableTreesRows()
            {
                if ((this.Table.ChildRelations["LookupTableTreesLookupTableTrees"] == null))
                {
                    return new LookupTableTreesRow[0];
                }
                else
                {
                    return ((LookupTableTreesRow[])(base.GetChildRows(this.Table.ChildRelations["LookupTableTreesLookupTableTrees"])));
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LookupTablesRowChangeEvent : global::System.EventArgs
        {

            private LookupTablesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRowChangeEvent(LookupTablesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTablesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LookupTableMasksRowChangeEvent : global::System.EventArgs
        {

            private LookupTableMasksRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRowChangeEvent(LookupTableMasksRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableMasksRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LookupTableTreesRowChangeEvent : global::System.EventArgs
        {

            private LookupTableTreesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRowChangeEvent(LookupTableTreesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LookupTableTreesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}
